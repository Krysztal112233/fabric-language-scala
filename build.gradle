plugins {
	id 'java-library'
	id 'scala'
	id 'maven-publish'
	id 'fabric-loom' version '1.3-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
archivesBaseName = project.archives_base_name
group = project.maven_group

version = mod_version + "+scala." + project.scala_version

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	include(api("org.scala-lang:scala3-library_3:${project.scala_version}"))
	include(api("org.scala-lang:scala-library:2.13.12"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

java {
	withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name.toLowerCase()
            version = project.version
            artifact(tasks.jar)
            from components.java
        }
    }
	repositories {
		if (System.getenv('MAVEN_URL')) {
			maven {
				url System.getenv('MAVEN_URL')
				credentials {
					username System.getenv('MAVEN_USERNAME')
					password System.getenv('MAVEN_PASSWORD')
				}
			}
		}
	}
}

// A task to ensure that the version being released has not already been released.
task checkVersion {
	doFirst {
		def xml = new URL("https://maven.fabricmc.net/net/fabricmc/fabric-language-scala/maven-metadata.xml").text
		def metadata = new XmlSlurper().parseText(xml)
		def versions = metadata.versioning.versions.version*.text();
		if (versions.contains(version)) {
			throw new RuntimeException("${version} has already been released!")
		}
	}
}
